import React from 'react';import { Navigate, Route, Routes } from 'react-router-dom';import {   AUTH_PRIVATE_ROUTES,   FOOTER_ABOUT_US_LINKS,   FOOTER_INFORMATION_LINKS,   PUBLIC_ROUTES,} from './routes';import { useAppSelector } from '../hook/useSelector';import { checkAccountRole } from '../components/checkPermission/checkPermission';import { PageNotFound } from '../pages/notFound/notFound';import { LOGIN_ROUTE } from '../constants/routeConstants';export const AppRoutes: React.FC = props => {   const user = useAppSelector(state => state.users);   return (      <Routes>         {user.isAuth ? (            AUTH_PRIVATE_ROUTES.map(route =>               checkAccountRole(route.permissions) ? (                  <Route                     key={route.path}                     path={route.path}                     element={route.component}                  />               ) : null            )         ) : (            <Route path="*" element={<Navigate to={`/${LOGIN_ROUTE}`} />} />         )}         {PUBLIC_ROUTES.map(route => (            <Route               key={route.path}               path={route.path}               element={route.component}            />         ))}         {FOOTER_ABOUT_US_LINKS.map(route => (            <Route               key={route.path}               path={route.path}               element={route.component}            />         ))}         {FOOTER_INFORMATION_LINKS.map(route => (            <Route               key={route.path}               path={route.path}               element={route.component}            />         ))}         <Route path="*" element={<PageNotFound />} />         {/*{!user.isAuth && (*/}         {/*    <Route path="*" element={<Navigate to={`/${LOGIN_ROUTE}`} />} />*/}         {/*)}*/}      </Routes>   );};